{"ast":null,"code":"var _jsxFileName = \"C:\\\\xampp\\\\htdocs\\\\wdm_phase3\\\\React\\\\src\\\\administration\\\\schooladmin\\\\schooladmin.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport '../administration.css';\nimport add from '../../assets/images/plus.png';\nimport { populateTables } from '../administration';\nimport validateSession from \"../../session/session\";\nimport axios from \"axios\";\nimport deleteIcon from '../../assets/images/delete.png';\nimport confirmIcon from '../../assets/images/tick.png';\nimport discardIcon from '../../assets/images/close.png';\nimport edit from '../../assets/images/edit.png';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction SchoolAdmin() {\n  _s();\n\n  const [orders, setOrders] = useState([]);\n  const [equipments, setEquipments] = useState([]);\n  const [customers, setCustomers] = useState([]);\n  const [employee, setEmployee] = useState([]);\n  const [pickup, setPickup] = useState([]);\n  useEffect(() => {\n    validateSession('SchoolAdmin');\n    document.getElementsByClassName('nav-item active')[0].classList.remove('active');\n    document.getElementById('authenticationTab').classList.add('active');\n    updateOrderTable();\n    updateEquipmentsTable();\n    updateCustomerTable();\n    updateEmployeeTable();\n    updatePickupTable();\n    populateTables();\n  }, []);\n\n  function updateEquipmentsTable() {\n    axios({\n      method: 'post',\n      url: 'http://localhost/wdm_phase3/React/src/api/' + '/equipments.php',\n      headers: {\n        'content-type': 'application/json'\n      },\n      data: {\n        Function: 'getAllEquipments'\n      }\n    }).then(result => {\n      setEquipments(result.data);\n    }).catch(error => {});\n  } // delete row from given table\n\n\n  function deleteEqp(elementId) {\n    axios({\n      method: 'post',\n      url: 'http://localhost/wdm_phase3/React/src/api/' + '/equipments.php',\n      headers: {\n        'content-type': 'application/json'\n      },\n      data: {\n        Function: 'deleteEquipment',\n        Data: {\n          ID: elementId\n        }\n      }\n    }).then(result => {\n      equipments.splice(equipments.findIndex(equipment => equipment.ID === elementId), 1);\n      setEquipments(equipments);\n      updateEquipmentsTable();\n    }).catch(error => {});\n  }\n\n  function deleteCustomer(elementId) {\n    axios({\n      method: 'post',\n      url: 'http://localhost/wdm_phase3/React/src/api/' + '/customers.php',\n      headers: {\n        'content-type': 'application/json'\n      },\n      data: {\n        Function: 'deleteCustomer',\n        Data: {\n          ID: elementId\n        }\n      }\n    }).then(result => {\n      customers.splice(customers.findIndex(customer => customer.ID === elementId), 1);\n      setCustomers(customers);\n      updateCustomerTable();\n    }).catch(error => {});\n  }\n\n  function Customers() {\n    axios({\n      method: 'post',\n      url: 'http://localhost/wdm_phase3/React/src/api' + '/customers.php',\n      headers: {\n        'content-type': 'application/json'\n      },\n      data: {\n        Function: 'getAllCustomers'\n      }\n    }).then(result => {\n      setCustomers(result.data);\n    }).catch(error => {});\n  }\n\n  function deletePickup(elementId) {\n    axios({\n      method: 'post',\n      url: 'http://localhost/wdm_phase3/React/src/api' + '/pickupdelivery.php',\n      headers: {\n        'content-type': 'application/json'\n      },\n      data: {\n        Function: 'deletePickup',\n        Data: {\n          ID: elementId\n        }\n      }\n    }).then(result => {\n      pickup.splice(pickup.findIndex(pick => pick.ID === elementId), 1);\n      setPickup(pickup);\n      updatePickupTable();\n    }).catch(error => {});\n  }\n\n  function deleteEmployee(elementId) {\n    axios({\n      method: 'post',\n      url: 'http://localhost/wdm_phase3/React/src/api' + '/Employee.php',\n      headers: {\n        'content-type': 'application/json'\n      },\n      data: {\n        Function: 'deleteEmployee',\n        Data: {\n          ID: elementId\n        }\n      }\n    }).then(result => {\n      employee.splice(employee.findIndex(emp => emp.ID === elementId), 1);\n      setEmployee(employee);\n      updateEmployeeTable();\n    }).catch(error => {});\n  }\n\n  function editEquipmentColumn(equipment) {\n    equipments.map(equipment => {\n      if (equipment.addEquipment) {\n        equipment.addEquipment = false;\n      }\n    });\n    equipment.editEquipment = true;\n    let index = equipments.findIndex(equip => equip.ID === equipment.ID);\n    equipments[index] = equipment;\n    setEquipments([...equipments]);\n  }\n\n  function addEquipmentColumn() {\n    if (equipments.find(equipment => equipment.addEquipment)) {\n      return;\n    }\n\n    let equipment = {\n      ID: (100 || Number(equipments[equipments.length - 1].ID) + 1).toString(),\n      addEquipment: true,\n      Equipment_Type: 'Dryer',\n      Model_No: '',\n      Brand_Name: '',\n      Load_Capacity: 0,\n      Order_ID: 0,\n      Status: 'Available'\n    };\n    equipments.push(equipment);\n    setEquipments([...equipments]);\n  }\n\n  function addOrEditEquipment(equipment) {\n    axios({\n      method: 'post',\n      url: 'http://localhost/wdm_phase3/React/src/api' + '/equipments.php',\n      headers: {\n        'content-type': 'application/json'\n      },\n      data: {\n        Function: equipment.editEquipment ? 'alterRecord' : 'addNewEquipment',\n        Data: equipment\n      }\n    }).then(result => {\n      equipment.editEquipment = false;\n      equipment.addEquipment = false;\n      setEquipments(equipments);\n      updateEquipmentsTable();\n    }).catch(error => {});\n  }\n\n  function handleEqpChange(event, equipment) {\n    const {\n      name,\n      value\n    } = event.target;\n    equipments.forEach(equip => {\n      if (equip.ID === equipment.ID) {\n        equip[name] = value;\n      }\n    });\n    setEquipments([...equipments]);\n  }\n\n  function updateOrderTable() {\n    axios({\n      method: 'post',\n      url: 'http://localhost/wdm_phase3/React/src/api' + '/orders.php',\n      headers: {\n        'content-type': 'application/json'\n      },\n      data: {\n        Function: 'getAllOrders'\n      }\n    }).then(result => {\n      setOrders(result.data);\n    }).catch(error => {});\n  }\n\n  function updateEmployeeTable() {\n    axios({\n      method: 'post',\n      url: 'http://localhost/wdm_phase3/React/src/api' + '/Employee.php',\n      headers: {\n        'content-type': 'application/json'\n      },\n      data: {\n        Function: 'getAllEmployee'\n      }\n    }).then(result => {\n      setEmployee(result.data);\n    }).catch(error => {});\n  }\n\n  function updatePickupTable() {\n    axios({\n      method: 'post',\n      url: 'http://localhost/wdm_phase3/React/src/api' + '/pickupdelivery.php',\n      headers: {\n        'content-type': 'application/json'\n      },\n      data: {\n        Function: 'getAllPickup'\n      }\n    }).then(result => {\n      setPickup(result.data);\n    }).catch(error => {});\n  }\n\n  function updateCustomerTable() {\n    axios({\n      method: 'post',\n      url: 'http://localhost/wdm_phase3/React/src/api' + '/customers.php',\n      headers: {\n        'content-type': 'application/json'\n      },\n      data: {\n        Function: 'getAllCustomers'\n      }\n    }).then(result => {\n      setCustomers(result.data);\n    }).catch(error => {});\n  } // delete row from given table\n\n\n  function deleteOrder(elementId) {\n    axios({\n      method: 'post',\n      url: 'http://localhost/wdm_phase3/React/src/api' + '/orders.php',\n      headers: {\n        'content-type': 'application/json'\n      },\n      data: {\n        Function: 'deleteOrder',\n        Data: {\n          Order_ID: elementId\n        }\n      }\n    }).then(result => {\n      orders.splice(orders.findIndex(order => order.Order_ID === elementId), 1);\n      setOrders([...orders]);\n      updateOrderTable();\n    }).catch(error => {});\n  }\n\n  function editOrderColumn(order) {\n    orders.map(order => {\n      if (order.addOrder) {\n        order.addOrder = false;\n      }\n    });\n    order.editOrder = true;\n    let index = orders.findIndex(ord => ord.Order_ID === order.Order_ID);\n    orders[index] = order;\n    setOrders([...orders]);\n  }\n\n  function addOrderColumn() {\n    if (orders.find(order => order.addOrder)) {\n      return;\n    }\n\n    let order = {\n      Order_ID: (Number(orders[orders.length - 1].Order_ID) + 1).toString(),\n      addOrder: true,\n      First_Name: '',\n      Last_Name: '',\n      items: 0,\n      Service: 'Washing',\n      Email: '',\n      Phonenumber: undefined,\n      Customer_ID: undefined\n    };\n    orders.push(order);\n    setOrders([...orders]);\n  }\n\n  function addOrEditOrder(order) {\n    axios({\n      method: 'post',\n      url: 'http://localhost/wdm_phase3/React/src/api/' + '/orders.php',\n      headers: {\n        'content-type': 'application/json'\n      },\n      data: {\n        Function: order.editOrder ? 'alterRecord' : 'addNewOrder',\n        Data: order\n      }\n    }).then(result => {\n      order.editOrder = false;\n      order.addOrder = false;\n      setOrders([...orders]);\n      updateOrderTable();\n    }).catch(error => {});\n  }\n\n  function handleOrdChange(event, order) {\n    const {\n      name,\n      value\n    } = event.target;\n    orders.forEach(ord => {\n      if (ord.Order_ID === order.Order_ID) {\n        ord[name] = value;\n      }\n    });\n    setOrders([...orders]);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: \"administration-bg hide-section\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      id: \"heading-container\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"font-oswald heading\",\n        children: \" School Admin  \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 313,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 312,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"manage-container d-flex flex-direction-column align-items-around justify-evenly\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"d-flex flex-direction-row justify-around section-container\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"d-flex flex-direction-column align-items-start section-content\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"font-oswald section-header\",\n            children: \"Manage Students\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 323,\n            columnNumber: 101\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"table-container\",\n            children: /*#__PURE__*/_jsxDEV(\"table\", {\n              id: \"customer-table\",\n              className: \"material-table\",\n              children: /*#__PURE__*/_jsxDEV(\"tbody\", {\n                children: [/*#__PURE__*/_jsxDEV(\"tr\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                    children: \"ID\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 329,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                    children: \"First Nmae\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 330,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                    children: \"Last Name\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 331,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                    children: \"Email\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 332,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                    children: \"Created Date\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 333,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                    children: \"User Type\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 334,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                    children: \"Address\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 335,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                    className: \"text-align-center\",\n                    children: /*#__PURE__*/_jsxDEV(\"img\", {\n                      className: \"cursor-pointer\",\n                      title: \"Add Record\",\n                      onClick: () => {},\n                      src: add,\n                      height: \"13px\",\n                      width: \"13px\",\n                      alt: \"add records\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 336,\n                      columnNumber: 75\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 336,\n                    columnNumber: 41\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 328,\n                  columnNumber: 37\n                }, this), Customers.map(customer => /*#__PURE__*/_jsxDEV(\"tr\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                    children: customer.ID\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 342,\n                    columnNumber: 45\n                  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                    children: customer.First_Name\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 343,\n                    columnNumber: 45\n                  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                    children: customer.Last_Name\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 344,\n                    columnNumber: 45\n                  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                    children: customer.Email\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 345,\n                    columnNumber: 45\n                  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                    children: customer.Created_Date\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 346,\n                    columnNumber: 45\n                  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                    children: customer.User_Type\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 347,\n                    columnNumber: 45\n                  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                    children: ''\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 348,\n                    columnNumber: 45\n                  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                    children: /*#__PURE__*/_jsxDEV(\"span\", {\n                      className: \"action-icons\",\n                      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n                        src: edit,\n                        onClick: () => {},\n                        title: \"edit\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 351,\n                        columnNumber: 53\n                      }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n                        src: deleteIcon,\n                        onClick: () => deleteCustomer(customer.ID),\n                        title: \"delete\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 352,\n                        columnNumber: 53\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 350,\n                      columnNumber: 49\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 349,\n                    columnNumber: 45\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 341,\n                  columnNumber: 41\n                }, this))]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 327,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 326,\n              columnNumber: 25\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 325,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 323,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 320,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"d-flex flex-direction-row justify-around section-container\",\n        id: \"manager-actions\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 430,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"d-flex flex-direction-row justify-around section-container\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 478,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 317,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 310,\n    columnNumber: 9\n  }, this);\n}\n\n_s(SchoolAdmin, \"noNGSNr1wsDPAMBTztUeNNvP6G8=\");\n\n_c = SchoolAdmin;\nexport default SchoolAdmin;\n\nvar _c;\n\n$RefreshReg$(_c, \"SchoolAdmin\");","map":{"version":3,"sources":["C:/xampp/htdocs/wdm_phase3/React/src/administration/schooladmin/schooladmin.js"],"names":["React","useEffect","useState","add","populateTables","validateSession","axios","deleteIcon","confirmIcon","discardIcon","edit","SchoolAdmin","orders","setOrders","equipments","setEquipments","customers","setCustomers","employee","setEmployee","pickup","setPickup","document","getElementsByClassName","classList","remove","getElementById","updateOrderTable","updateEquipmentsTable","updateCustomerTable","updateEmployeeTable","updatePickupTable","method","url","headers","data","Function","then","result","catch","error","deleteEqp","elementId","Data","ID","splice","findIndex","equipment","deleteCustomer","customer","Customers","deletePickup","pick","deleteEmployee","emp","editEquipmentColumn","map","addEquipment","editEquipment","index","equip","addEquipmentColumn","find","Number","length","toString","Equipment_Type","Model_No","Brand_Name","Load_Capacity","Order_ID","Status","push","addOrEditEquipment","handleEqpChange","event","name","value","target","forEach","deleteOrder","order","editOrderColumn","addOrder","editOrder","ord","addOrderColumn","First_Name","Last_Name","items","Service","Email","Phonenumber","undefined","Customer_ID","addOrEditOrder","handleOrdChange","Created_Date","User_Type"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport '../administration.css';\r\nimport add from '../../assets/images/plus.png';\r\nimport { populateTables } from '../administration';\r\nimport validateSession from \"../../session/session\";\r\nimport axios from \"axios\";\r\nimport deleteIcon from '../../assets/images/delete.png';\r\nimport confirmIcon from '../../assets/images/tick.png';\r\nimport discardIcon from '../../assets/images/close.png';\r\nimport edit from '../../assets/images/edit.png';\r\nfunction SchoolAdmin() {\r\n    const [orders, setOrders] = useState([]);\r\n    const [equipments, setEquipments] = useState([]);\r\n    const [customers, setCustomers] = useState([]);\r\n    const [employee, setEmployee] = useState([]);\r\n    const [pickup, setPickup] = useState([]);\r\n    useEffect(() => {\r\n        validateSession('SchoolAdmin');\r\n        document.getElementsByClassName('nav-item active')[0].classList.remove('active');\r\n        document.getElementById('authenticationTab').classList.add('active');\r\n        updateOrderTable()\r\n        updateEquipmentsTable();\r\n        updateCustomerTable();\r\n        updateEmployeeTable();\r\n        updatePickupTable();\r\n        populateTables();\r\n    }, []);\r\n    function updateEquipmentsTable() {\r\n        axios({\r\n            method: 'post',\r\n            url: 'http://localhost/wdm_phase3/React/src/api/' + '/equipments.php',\r\n            headers: {\r\n                'content-type': 'application/json'\r\n            },\r\n            data: { Function: 'getAllEquipments' }\r\n        }).then(result => {\r\n            setEquipments(result.data);\r\n        }).catch(error => {\r\n        });\r\n    }\r\n\r\n    // delete row from given table\r\n    function deleteEqp(elementId) {\r\n        axios({\r\n            method: 'post',\r\n            url: 'http://localhost/wdm_phase3/React/src/api/' + '/equipments.php',\r\n            headers: {\r\n                'content-type': 'application/json'\r\n            },\r\n            data: { Function: 'deleteEquipment', Data: { ID: elementId } }\r\n        }).then(result => {\r\n            equipments.splice(equipments.findIndex(equipment => equipment.ID === elementId), 1)\r\n            setEquipments(equipments);\r\n            updateEquipmentsTable()\r\n        }).catch(error => {\r\n        });\r\n    }\r\n\r\n    function deleteCustomer(elementId) {\r\n        axios({\r\n            method: 'post',\r\n            url: 'http://localhost/wdm_phase3/React/src/api/' + '/customers.php',\r\n            headers: {\r\n                'content-type': 'application/json'\r\n            },\r\n            data: { Function: 'deleteCustomer', Data: { ID: elementId } }\r\n        }).then(result => {\r\n            customers.splice(customers.findIndex(customer => customer.ID === elementId), 1)\r\n            setCustomers(customers);\r\n            updateCustomerTable()\r\n        }).catch(error => {\r\n        });\r\n    }\r\n\r\n    function Customers() {\r\n        axios({\r\n            method: 'post',\r\n            url: 'http://localhost/wdm_phase3/React/src/api' + '/customers.php',\r\n            headers: {\r\n                'content-type': 'application/json'\r\n            },\r\n            data: { Function: 'getAllCustomers' }\r\n        }).then(result => {\r\n            setCustomers(result.data);\r\n        }).catch(error => {\r\n        });\r\n    }\r\n\r\n    function deletePickup(elementId) {\r\n        axios({\r\n            method: 'post',\r\n            url: 'http://localhost/wdm_phase3/React/src/api' + '/pickupdelivery.php',\r\n            headers: {\r\n                'content-type': 'application/json'\r\n            },\r\n            data: { Function: 'deletePickup', Data: { ID: elementId } }\r\n        }).then(result => {\r\n            pickup.splice(pickup.findIndex(pick => pick.ID === elementId), 1)\r\n            setPickup(pickup);\r\n            updatePickupTable()\r\n        }).catch(error => {\r\n        });\r\n    }\r\n\r\n    function deleteEmployee(elementId) {\r\n        axios({\r\n            method: 'post',\r\n            url: 'http://localhost/wdm_phase3/React/src/api' + '/Employee.php',\r\n            headers: {\r\n                'content-type': 'application/json'\r\n            },\r\n            data: { Function: 'deleteEmployee', Data: { ID: elementId } }\r\n        }).then(result => {\r\n            employee.splice(employee.findIndex(emp => emp.ID === elementId), 1)\r\n            setEmployee(employee);\r\n            updateEmployeeTable()\r\n        }).catch(error => {\r\n        });\r\n    }\r\n    function editEquipmentColumn(equipment) {\r\n        equipments.map(equipment => {\r\n            if (equipment.addEquipment) {\r\n                equipment.addEquipment = false;\r\n            }\r\n        });\r\n        equipment.editEquipment = true;\r\n        let index = equipments.findIndex(equip => equip.ID === equipment.ID);\r\n        equipments[index] = equipment;\r\n        setEquipments([...equipments]);\r\n    }\r\n\r\n    function addEquipmentColumn() {\r\n        if (equipments.find(equipment => equipment.addEquipment)) {\r\n            return;\r\n        }\r\n        let equipment = {\r\n            ID: (100 || (Number(equipments[equipments.length - 1].ID) + 1)).toString(),\r\n            addEquipment: true,\r\n            Equipment_Type: 'Dryer',\r\n            Model_No: '',\r\n            Brand_Name: '',\r\n            Load_Capacity: 0,\r\n            Order_ID: 0,\r\n            Status: 'Available'\r\n        }\r\n        equipments.push(equipment);\r\n        setEquipments([...equipments]);\r\n    }\r\n\r\n    function addOrEditEquipment(equipment) {\r\n        axios({\r\n            method: 'post',\r\n            url: 'http://localhost/wdm_phase3/React/src/api' + '/equipments.php',\r\n            headers: {\r\n                'content-type': 'application/json'\r\n            },\r\n            data: { Function: (equipment.editEquipment ? 'alterRecord' : 'addNewEquipment'), Data: equipment }\r\n        }).then(result => {\r\n            equipment.editEquipment = false;\r\n            equipment.addEquipment = false;\r\n            setEquipments(equipments);\r\n            updateEquipmentsTable();\r\n        }).catch(error => {\r\n        });\r\n    }\r\n\r\n    function handleEqpChange(event, equipment) {\r\n        const { name, value } = event.target;\r\n        equipments.forEach((equip) => {\r\n            if (equip.ID === equipment.ID) {\r\n                equip[name] = value;\r\n            }\r\n        });\r\n        setEquipments([...equipments]);\r\n    }\r\n\r\n\r\n    function updateOrderTable() {\r\n        axios({\r\n            method: 'post',\r\n            url: 'http://localhost/wdm_phase3/React/src/api' + '/orders.php',\r\n            headers: {\r\n                'content-type': 'application/json'\r\n            },\r\n            data: { Function: 'getAllOrders' }\r\n        }).then(result => {\r\n            setOrders(result.data);\r\n        }).catch(error => {\r\n        });\r\n    }\r\n\r\n    function updateEmployeeTable() {\r\n        axios({\r\n            method: 'post',\r\n            url: 'http://localhost/wdm_phase3/React/src/api' + '/Employee.php',\r\n            headers: {\r\n                'content-type': 'application/json'\r\n            },\r\n            data: { Function: 'getAllEmployee' }\r\n        }).then(result => {\r\n            setEmployee(result.data);\r\n        }).catch(error => {\r\n        });\r\n    }\r\n\r\n    function updatePickupTable() {\r\n        axios({\r\n            method: 'post',\r\n            url: 'http://localhost/wdm_phase3/React/src/api' + '/pickupdelivery.php',\r\n            headers: {\r\n                'content-type': 'application/json'\r\n            },\r\n            data: { Function: 'getAllPickup' }\r\n        }).then(result => {\r\n            setPickup(result.data);\r\n        }).catch(error => {\r\n        });\r\n    }\r\n\r\n    function updateCustomerTable() {\r\n        axios({\r\n            method: 'post',\r\n            url: 'http://localhost/wdm_phase3/React/src/api' + '/customers.php',\r\n            headers: {\r\n                'content-type': 'application/json'\r\n            },\r\n            data: { Function: 'getAllCustomers' }\r\n        }).then(result => {\r\n            setCustomers(result.data);\r\n        }).catch(error => {\r\n        });\r\n    }\r\n    // delete row from given table\r\n    function deleteOrder(elementId) {\r\n        axios({\r\n            method: 'post',\r\n            url: 'http://localhost/wdm_phase3/React/src/api' + '/orders.php',\r\n            headers: {\r\n                'content-type': 'application/json'\r\n            },\r\n            data: { Function: 'deleteOrder', Data: { Order_ID: elementId } }\r\n        }).then(result => {\r\n            orders.splice(orders.findIndex(order => order.Order_ID === elementId), 1)\r\n            setOrders([...orders]);\r\n            updateOrderTable();\r\n        }).catch(error => {\r\n        });\r\n    }\r\n\r\n    function editOrderColumn(order) {\r\n        orders.map(order => {\r\n            if (order.addOrder) {\r\n                order.addOrder = false;\r\n            }\r\n        });\r\n        order.editOrder = true;\r\n        let index = orders.findIndex(ord => ord.Order_ID === order.Order_ID);\r\n        orders[index] = order;\r\n        setOrders([...orders]);\r\n    }\r\n\r\n    function addOrderColumn() {\r\n        if (orders.find(order => order.addOrder)) {\r\n            return;\r\n        }\r\n        let order = {\r\n            Order_ID: (Number(orders[orders.length - 1].Order_ID) + 1).toString(),\r\n            addOrder: true,\r\n            First_Name: '',\r\n            Last_Name: '',\r\n            items: 0,\r\n            Service: 'Washing',\r\n            Email: '',\r\n            Phonenumber: undefined,\r\n            Customer_ID: undefined\r\n        }\r\n        orders.push(order);\r\n        setOrders([...orders]);\r\n    }\r\n\r\n    function addOrEditOrder(order) {\r\n        axios({\r\n            method: 'post',\r\n            url: 'http://localhost/wdm_phase3/React/src/api/' + '/orders.php',\r\n            headers: {\r\n                'content-type': 'application/json'\r\n            },\r\n            data: { Function: (order.editOrder ? 'alterRecord' : 'addNewOrder'), Data: order }\r\n        }).then(result => {\r\n            order.editOrder = false;\r\n            order.addOrder = false;\r\n            setOrders([...orders]);\r\n            updateOrderTable();\r\n        }).catch(error => {\r\n        });\r\n\r\n    }\r\n\r\n    function handleOrdChange(event, order) {\r\n        const { name, value } = event.target;\r\n        orders.forEach((ord) => {\r\n            if (ord.Order_ID === order.Order_ID) {\r\n                ord[name] = value;\r\n            }\r\n        });\r\n        setOrders([...orders]);\r\n    }\r\n\r\n    return (\r\n        <section className='administration-bg hide-section'>\r\n            {/* Header section title */}\r\n            <div className=\"container\" id=\"heading-container\">\r\n                <div className=\"font-oswald heading\"> School Admin  </div>\r\n            </div>\r\n\r\n            {/* School admin section tables structure  */}\r\n            <div className=\"manage-container d-flex flex-direction-column align-items-around justify-evenly\">\r\n\r\n                {/* Horizontal row section containing multiple tables  */}\r\n                <div className=\"d-flex flex-direction-row justify-around section-container\">\r\n\r\n                    {/* Manage Student table  */}\r\n                    <div className=\"d-flex flex-direction-column align-items-start section-content\"><span\r\n                        className=\"font-oswald section-header\">Manage Students</span>\r\n                        <div className=\"table-container\">\r\n                        <table id=\"customer-table\" className=\"material-table\">\r\n                                <tbody>\r\n                                    <tr>\r\n                                        <th>ID</th>\r\n                                        <th>First Nmae</th>\r\n                                        <th>Last Name</th>\r\n                                        <th>Email</th>\r\n                                        <th>Created Date</th>\r\n                                        <th>User Type</th>\r\n                                        <th>Address</th>\r\n                                        <th className=\"text-align-center\"><img className=\"cursor-pointer\" title=\"Add Record\"\r\n                                            onClick={() => { }} src={add} height=\"13px\"\r\n                                            width=\"13px\" alt='add records' /></th>\r\n                                    </tr>\r\n                                    {Customers.map(customer => (\r\n                                        <tr>\r\n                                            <td>{customer.ID}</td>\r\n                                            <td>{customer.First_Name}</td>\r\n                                            <td>{customer.Last_Name}</td>\r\n                                            <td>{customer.Email}</td>\r\n                                            <td>{customer.Created_Date}</td>\r\n                                            <td>{customer.User_Type}</td>\r\n                                            <td>{''}</td>\r\n                                            <td>\r\n                                                <span className=\"action-icons\">\r\n                                                    <img src={edit} onClick={() => { }} title=\"edit\" />\r\n                                                    <img src={deleteIcon} onClick={() => deleteCustomer(customer.ID)} title=\"delete\" />\r\n                                                </span>\r\n                                            </td>\r\n                                        </tr>))}\r\n                                </tbody>\r\n                            </table>\r\n                        </div>\r\n                    </div>\r\n\r\n                    {/* Manage equipment table  */}\r\n                    {/* <div className=\"d-flex flex-direction-column align-items-start section-content\"><span\r\n                        className=\"font-oswald section-header\">Manage Business Owner's </span>\r\n                        <div className=\"table-container\">\r\n                            <table id=\"equipment-table\" className=\"material-table\">\r\n                                <tbody>\r\n                                    <tr>\r\n                                        <th>ID</th>\r\n                                        <th>Equipment Type</th>\r\n                                        <th>Model No</th>\r\n                                        <th>Brand Name</th>\r\n                                        <th>Load Capacity</th>\r\n                                        <th>Status</th>\r\n                                        <th>Order ID</th>\r\n                                        <th className=\"text-align-center\"><img className=\"cursor-pointer\" title=\"Add Record\"\r\n                                            onClick={() => addEquipmentColumn()} src={add} height=\"13px\"\r\n                                            width=\"13px\" alt='add records' /></th>\r\n                                    </tr>\r\n                                    {equipments.map(equipment => {\r\n                                        if ((equipment.editEquipment || equipment.addEquipment))\r\n                                            return (<tr>\r\n                                                <td>{equipment.ID}</td>\r\n                                                <td>\r\n                                                    <select name=\"Equipment_Type\" id=\"equipmentType\" className=\"font-roboto\" value={equipment.Equipment_Type} onChange={(event) => handleEqpChange(event, equipment)} required>\r\n                                                        <option value=\"Washing Machine\" >Washing Machine</option>\r\n                                                        <option value=\"Dryer\">Dryer</option>\r\n                                                        <option value=\"Iron Box\">Iron Box</option>\r\n                                                        <option value=\"Weights\">Weights</option>\r\n                                                        <option value=\"Basket\">Basket</option>\r\n                                                    </select>\r\n                                                </td>\r\n                                                <td><input type=\"text\" id=\"modelNo\" name=\"Model_No\" className=\"font-roboto\" placeholder=\"Model No\" value={equipment.Model_No} onChange={(event) => handleEqpChange(event, equipment)} required /></td>\r\n                                                <td><input type=\"text\" id=\"brandName\" name=\"Brand_Name\" className=\"font-roboto\" placeholder=\"Brand_Name\" value={equipment.Brand_Name} onChange={(event) => handleEqpChange(event, equipment)} required /></td>\r\n                                                <td><input type=\"number\" id=\"loadCapacity\" className=\"font-roboto\" name=\"Load_Capacity\" placeholder=\"Load_Capacity\" value={equipment.Load_Capacity} onChange={(event) => handleEqpChange(event, equipment)} required /></td>\r\n                                                <td><select name=\"Status\" id=\"status\" className=\"font-roboto\" value={equipment.Status} onChange={(event) => handleEqpChange(event, equipment)} required>\r\n                                                    <option value=\"Available\" >Available</option>\r\n                                                    <option value=\"InUse\">In Use</option>\r\n                                                </select></td>\r\n                                                <td><input type=\"number\" id=\"orderid\" name=\"Order_ID\" placeholder=\"Order ID\" value={equipment.Order_ID} onChange={(event) => handleEqpChange(event, equipment)} required /></td>\r\n                                                <td>\r\n                                                    <span className=\"action-icons\">\r\n                                                        <img src={confirmIcon} onClick={() => addOrEditEquipment(equipment)} title=\"Confirm\" />\r\n                                                        <img src={discardIcon} onClick={() => equipment.editEquipment = false} title=\"Cancel\" />\r\n                                                    </span></td>\r\n                                            </tr>);\r\n                                        else return (\r\n                                            <tr>\r\n                                                <td>{equipment.ID}</td>\r\n                                                <td>{equipment.Equipment_Type}</td>\r\n                                                <td>{equipment.Model_No}</td>\r\n                                                <td>{equipment.Brand_Name}</td>\r\n                                                <td>{equipment.Load_Capacity}</td>\r\n                                                <td>{equipment.Status}</td>\r\n                                                <td>{equipment.Order_ID}</td>\r\n                                                <td>\r\n                                                    <span className=\"action-icons\">\r\n                                                        <img src={edit} onClick={() => editEquipmentColumn(equipment)} title=\"edit\" />\r\n                                                        <img src={deleteIcon} onClick={() => deleteEqp(equipment.ID)} title=\"delete\" />\r\n                                                    </span>\r\n                                                </td>\r\n                                            </tr>)\r\n                                    })}\r\n                                </tbody>\r\n                            </table>\r\n                        </div>\r\n                    </div> */}\r\n                </div>\r\n\r\n                {/* Horizontal row section containing multiple tables  */}\r\n                <div className=\"d-flex flex-direction-row justify-around section-container\" id=\"manager-actions\">\r\n\r\n                    {/* Manual Order table  */}\r\n                    {/* <div className=\"d-flex flex-direction-column align-items-start section-content\"><span\r\n                        className=\"font-oswald section-header\">Manual Order</span>\r\n                        <div className=\"d-flex flex-direction-row order-container\">\r\n                            <div className=\"d-flex flex-direction-column justify-between\">\r\n                                <input type=\"text\" placeholder=\"Customer Name\" required=\"required\" />\r\n                                <input type=\"text\" placeholder=\"Phone Number\" required=\"required\" maxLength=\"10\" />\r\n                                <label>Service Type:</label>\r\n                                <select name=\"services\" id=\"services\">\r\n                                    <option value=\"Washing\">Washing</option>\r\n                                    <option value=\"Drying\">Drying</option>\r\n                                    <option value=\"Ironing\">Ironing</option>\r\n                                    <option value=\"Pickup\">Pickup</option>\r\n                                    <option value=\"Delivery\">Delivery</option>\r\n                                </select>\r\n                            </div>\r\n                            <div className=\"d-flex flex-direction-column justify-between\">\r\n                                <input type=\"text-area\" placeholder=\"Description\" />\r\n                                <input type=\"submit\" className=\"btn submit-order\" />\r\n                            </div>\r\n                        </div>\r\n                    </div> */}\r\n\r\n                    {/* Manage tasks table  */}\r\n                    {/* <div className=\"d-flex flex-direction-column align-items-start section-content\"><span\r\n                        className=\"font-oswald section-header\">Manage Tasks</span>\r\n                        <div className=\"table-container\">\r\n                            <table id=\"tasks-table\" className=\"material-table\">\r\n                                <tbody>\r\n                                    <tr>\r\n                                        <th>#</th>\r\n                                        <th>Name</th>\r\n                                        <th>Assigned to</th>\r\n                                        <th>Desc</th>\r\n                                        <th>Services</th>\r\n                                        <th className=\"text-align-center\"><img className=\"cursor-pointer\" title=\"Add Record\"\r\n                                            src={add} height=\"13px\"\r\n                                            width=\"13px\" alt='add-record' /></th>\r\n                                    </tr>\r\n                                </tbody>\r\n                            </table>\r\n                        </div>\r\n                    </div> */}\r\n                </div>\r\n\r\n                {/* Horizontal row section containing multiple tables  */}\r\n                <div className=\"d-flex flex-direction-row justify-around section-container\">\r\n\r\n                    {/* Manage Customers table  */}\r\n                    {/* <div className=\"d-flex flex-direction-column align-items-start section-content\"><span\r\n                        className=\"font-oswald section-header\">Manage Customers</span>\r\n                        <div className=\"table-container\">\r\n                            <table id=\"customer-table\" className=\"material-table\">\r\n                                <tbody>\r\n                                    <tr>\r\n                                        <th>ID</th>\r\n                                        <th>First Nmae</th>\r\n                                        <th>Last Name</th>\r\n                                        <th>Email</th>\r\n                                        <th>Created Date</th>\r\n                                        <th>User Type</th>\r\n                                        <th>Address</th>\r\n                                        <th className=\"text-align-center\"><img className=\"cursor-pointer\" title=\"Add Record\"\r\n                                            onClick={() => { }} src={add} height=\"13px\"\r\n                                            width=\"13px\" alt='add records' /></th>\r\n                                    </tr>\r\n                                    {customers.map(customer => (\r\n                                        <tr>\r\n                                            <td>{customer.ID}</td>\r\n                                            <td>{customer.First_Name}</td>\r\n                                            <td>{customer.Last_Name}</td>\r\n                                            <td>{customer.Email}</td>\r\n                                            <td>{customer.Created_Date}</td>\r\n                                            <td>{customer.User_Type}</td>\r\n                                            <td>{''}</td>\r\n                                            <td>\r\n                                                <span className=\"action-icons\">\r\n                                                    <img src={edit} onClick={() => { }} title=\"edit\" />\r\n                                                    <img src={deleteIcon} onClick={() => deleteCustomer(customer.ID)} title=\"delete\" />\r\n                                                </span>\r\n                                            </td>\r\n                                        </tr>))}\r\n                                </tbody>\r\n                            </table>\r\n                        </div>\r\n                    </div> */}\r\n\r\n                    {/* Manage Pickup/Delivery table  */}\r\n                    {/* <div className=\"d-flex flex-direction-column align-items-start section-content\"><span\r\n                        className=\"font-oswald section-header\">Manage Pickup / Delivery</span>\r\n                        <div className=\"table-container\">\r\n                            <table id=\"pickup-table\" className=\"material-table\">\r\n                                <tbody>\r\n                                    <tr>\r\n                                        <th>ID</th>\r\n                                        <th>First Nmae</th>\r\n                                        <th>Last Name</th>\r\n                                        <th>Email</th>\r\n                                        <th>Phone Number</th>\r\n                                        <th>Subscription</th>\r\n                                        <th>Plan</th>\r\n                                        <th>Day</th>\r\n                                        <th>Address</th>\r\n                                        <th className=\"text-align-center\"><img className=\"cursor-pointer\" title=\"Add Record\"\r\n                                            onClick={() => { }} src={add} height=\"13px\"\r\n                                            width=\"13px\" alt='add records' /></th>\r\n                                    </tr>\r\n                                    {pickup.map(pickup => (\r\n                                        <tr>\r\n                                            <td>{pickup.ID}</td>\r\n                                            <td>{pickup.First_Name}</td>\r\n                                            <td>{pickup.Last_Name}</td>\r\n                                            <td>{pickup.Email}</td>\r\n                                            <td>{pickup.Phonenumber}</td>\r\n                                            <td>{pickup.subscribe}</td>\r\n                                            <td>{pickup.plan}</td>\r\n                                            <td>{pickup.day}</td>\r\n                                            <td>{pickup.address}</td>\r\n                                            <td>\r\n                                                <span className=\"action-icons\">\r\n                                                    <img src={edit} onClick={() => { }} title=\"edit\" />\r\n                                                    <img src={deleteIcon} onClick={() => deletePickup(pickup.ID)} title=\"delete\" />\r\n                                                </span>\r\n                                            </td>\r\n                                        </tr>))}\r\n                                </tbody>\r\n                            </table>\r\n                        </div>\r\n                    </div> */}\r\n                </div>\r\n\r\n                {/* Horizontal row section containing Employee table  */}\r\n                {/* <div className=\"d-flex flex-direction-row justify-around section-container\" id='employee-table-container'>\r\n                    <div className=\"d-flex flex-direction-column align-items-start section-content\"><span\r\n                        className=\"font-oswald section-header\">Manage Employees</span>\r\n                        <div className=\"table-container\">\r\n                            <table id=\"employee-table\" className=\"material-table\">\r\n                                <tbody>\r\n                                    <tr>\r\n                                        <th>ID</th>\r\n                                        <th>First Nmae</th>\r\n                                        <th>Last Name</th>\r\n                                        <th>Email</th>\r\n                                        <th>Created Date</th>\r\n                                        <th>User Type</th>\r\n                                        <th>Address</th>\r\n                                        <th className=\"text-align-center\"><img className=\"cursor-pointer\" title=\"Add Record\"\r\n                                            onClick={() => { }} src={add} height=\"13px\"\r\n                                            width=\"13px\" alt='add records' /></th>\r\n                                    </tr>\r\n                                    {employee.map(emp => (\r\n                                        <tr>\r\n                                            <td>{emp.ID}</td>\r\n                                            <td>{emp.First_Name}</td>\r\n                                            <td>{emp.Last_Name}</td>\r\n                                            <td>{emp.Email}</td>\r\n                                            <td>{emp.Created_Date}</td>\r\n                                            <td>{emp.User_Type}</td>\r\n                                            <td>{''}</td>\r\n                                            <td>\r\n                                                <span className=\"action-icons\">\r\n                                                    <img src={edit} onClick={() => { }} title=\"edit\" />\r\n                                                    <img src={deleteIcon} onClick={() => deleteEmployee(emp.ID)} title=\"delete\" />\r\n                                                </span>\r\n                                            </td>\r\n                                        </tr>))}\r\n                                </tbody>\r\n                            </table>\r\n                        </div>\r\n                    </div>\r\n                </div> */}\r\n            </div>\r\n        </section>\r\n    );\r\n}\r\nexport default SchoolAdmin;"]},"metadata":{},"sourceType":"module"}